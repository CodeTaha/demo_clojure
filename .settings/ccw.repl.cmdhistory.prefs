cmdhistory=["3" "(+ 1 2 3)" "(use 'clojure.repl)" "(doc when)" "(find-doc \\"sequence\\")" "(apropos \\"map\\")" "(source take)" "(use 'clojure.repl)" "(dir clojure.repl)" "(+ 3 4)" "((fn [msg] (print msg))\\"Hello World\\")" "(def messenger (fn [msg] (print msg)))" "(messenger \\"Hello Taha\\")" "(fn [message] (print message))" "((fn [message] (print message))\\"Hello clojure\\")" "(def messenger(fn [message] (print message)))" "(messenger \\"hello clj\\n\\")" "(defn messenger [message] (print message))" "(messenger \\"lala\\")" "clear" "(messenger)" "(messenger \\"taha\\")" "(multiArity)" "(multiArity \\"taha\\")" "(messenger \\"hello\\" \\"taha\\" \\"kachwala\\")" "(messenger2 \\"hello\\" \\"taha\\" \\"kachwala\\")" "(.length \\"clojur\\")" "(in-ns 'foo.bar.baz)" "ns" "*ns*" "(in-ns 'foo.bar.baz)" "*ns*" "(use 'clojure.string)" "(join , [1 2 3])" "(join \\\\, [1 2 3])" "(use clojure.java.io)" "(use '\\n      clojure.java.io)" "(ns-public 'clojure.jva.io)" "(ns-public 'clojure.java.io)" "(ns-publics 'clojure.java.io)" "(keys ns-publics 'clojure.java.io)" "(keys (ns-publics 'clojure.java.io))" "(doc delete-file)" "(doc)" "(docs\\n  delete-file)" "(delete-file \\"/home/taha/gitrepos/deletefile.txt\\")" "*ns*" "(set \#{1 2} \#{5 6 7})" "(set/union \#{1 2} \#{5 6 7})" "(do-union \#{1 2} \#{5 6 7})" "(do-union \#{1 2} \#{5 6 7} \#{30 60})" "(do-union \#{1 2} \#{5 6 7} \#{30 60 1 2})" "()" "(1 2 3)" "'(1 2 3)" " (vector 1 2 3)" "lst" "(def lst '(2 3))" "lst" "(vec lst)" "jdow" "jdoe" "(doc get-in)" "jdoe" "clear" "(clear)" "(rest-names names)" "(draw-point \:x 5 \:y 10 \:z 15)" "(apply pnt)" "(apply [pnt])" "(set\! *print-length* 10)" "(take 5 fibs)" "(take 15 fibs)" "(drop\\n  15 fibs)" "(show-evens [])"]
eclipse.preferences.version=1
